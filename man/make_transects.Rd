% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_transects.R
\name{make_transects}
\alias{make_transects}
\title{Make transect lines for sampling}
\usage{
make_transects(
  line_layer_path,
  t_number,
  t_length,
  t_size,
  buddy_t = TRUE,
  direction = c("positive", "negative"),
  allow_overlaps = FALSE
)
}
\arguments{
\item{line_layer_path}{Character, path to the .shp file of the line layer to build
transects from.}

\item{t_number}{Numeric, the approximate number of transects to generate.}

\item{t_length}{Numeric, the desired length of transects (in meters).}

\item{t_size}{Numeric, the size (Y x Y) of the transect cells (in meters).}

\item{buddy_t}{Logical, default is TRUE,  whether to include a buddy transect
for efficient sampling.}

\item{direction}{Character, default is c("positive", "negative"), the direction from
the line layer transects should be built.}

\item{allow_overlaps}{Logical, default is FALSE, whether to remove areas of line where
transects could overlap with other transects.}
}
\value{
A 'sf' object with transect lines and ID numbers in lat long.
}
\description{
For returning a specified number of transects perpendicular
to a user supplied line feature. User options include the number of transects,
the length of the transect (in meters), and the size (assumed to be a square) of
each transect cell (in meters).

Set 'buddy_t' to TRUE to generate a transect less than 3 transect sizes away but at
least 1 transect size away so that sampling can be performed traveling away from
the line feature and back to the line feature.

The direction specifies which direction from the line layer transects should be
generated. Typically "positive" indicates transects to the North and West while
"negative" generates transects to the South and East. Default is both directions
from the line layer. Recommended to play with and decide for your needs.

While all overlaps are not guaranteed to be removed, setting 'allow_overlaps' to
FALSE (default) will restrict sampling to where the risk is minimized. This is done
by making a buffer the width of the transects around the line layer and removing
sections of the line layer where the buffer overlaps.

Note, transect locations are random, so every time this function is run you will
receive a new set of transects.
}
